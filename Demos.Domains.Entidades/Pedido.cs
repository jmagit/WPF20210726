//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using Demos.Domains.Core;

namespace Demos.Domains.Entidades {
    public partial class Pedido : Entidad {
        public Pedido() {
            this.Lineas = new ObservableCollection<Linea>();
        }


        private int _SalesOrderID;
        public int SalesOrderID {
            get => _SalesOrderID;
            set {
                if (_SalesOrderID == value) return;
                _SalesOrderID = value;
                RaiseValidateAndChangedProperty(nameof(SalesOrderID));
            }
        }

        private byte _RevisionNumber;
        public byte RevisionNumber {
            get => _RevisionNumber;
            set {
                if (_RevisionNumber == value) return;
                _RevisionNumber = value;
                RaiseValidateAndChangedProperty(nameof(RevisionNumber));
            }
        }

        private System.DateTime _OrderDate;
        public System.DateTime OrderDate {
            get => _OrderDate;
            set {
                if (_OrderDate == value) return;
                _OrderDate = value;
                RaiseValidateAndChangedProperty(nameof(OrderDate));
            }
        }

        private System.DateTime _DueDate;
        public System.DateTime DueDate {
            get => _DueDate;
            set {
                if (_DueDate == value) return;
                _DueDate = value;
                RaiseValidateAndChangedProperty(nameof(DueDate));
            }
        }

        private Nullable<System.DateTime> _ShipDate;
        public Nullable<System.DateTime> ShipDate {
            get => _ShipDate;
            set {
                if (_ShipDate == value) return;
                _ShipDate = value;
                RaiseValidateAndChangedProperty(nameof(ShipDate));
            }
        }

        private byte _Status;
        public byte Status {
            get => _Status;
            set {
                if (_Status == value) return;
                _Status = value;
                RaiseValidateAndChangedProperty(nameof(Status));
            }
        }

        private bool _OnlineOrderFlag;
        public bool OnlineOrderFlag {
            get => _OnlineOrderFlag;
            set {
                if (_OnlineOrderFlag == value) return;
                _OnlineOrderFlag = value;
                RaiseValidateAndChangedProperty(nameof(OnlineOrderFlag));
            }
        }

        private string _SalesOrderNumber;
        public string SalesOrderNumber {
            get => _SalesOrderNumber;
            set {
                if (_SalesOrderNumber == value) return;
                _SalesOrderNumber = value;
                RaiseValidateAndChangedProperty(nameof(SalesOrderNumber));
            }
        }

        private string _PurchaseOrderNumber;
        public string PurchaseOrderNumber {
            get => _PurchaseOrderNumber;
            set {
                if (_PurchaseOrderNumber == value) return;
                _PurchaseOrderNumber = value;
                RaiseValidateAndChangedProperty(nameof(PurchaseOrderNumber));
            }
        }

        private string _AccountNumber;
        public string AccountNumber {
            get => _AccountNumber;
            set {
                if (_AccountNumber == value) return;
                _AccountNumber = value;
                RaiseValidateAndChangedProperty(nameof(AccountNumber));
            }
        }

        private int _CustomerID;
        public int CustomerID {
            get => _CustomerID;
            set {
                if (_CustomerID == value) return;
                _CustomerID = value;
                RaiseValidateAndChangedProperty(nameof(CustomerID));
            }
        }

        private Nullable<int> _SalesPersonID;
        public Nullable<int> SalesPersonID {
            get => _SalesPersonID;
            set {
                if (_SalesPersonID == value) return;
                _SalesPersonID = value;
                RaiseValidateAndChangedProperty(nameof(SalesPersonID));
            }
        }

        private Nullable<int> _TerritoryID;
        public Nullable<int> TerritoryID {
            get => _TerritoryID;
            set {
                if (_TerritoryID == value) return;
                _TerritoryID = value;
                RaiseValidateAndChangedProperty(nameof(TerritoryID));
            }
        }

        private int _BillToAddressID;
        public int BillToAddressID {
            get => _BillToAddressID;
            set {
                if (_BillToAddressID == value) return;
                _BillToAddressID = value;
                RaiseValidateAndChangedProperty(nameof(BillToAddressID));
            }
        }

        private int _ShipToAddressID;
        public int ShipToAddressID {
            get => _ShipToAddressID;
            set {
                if (_ShipToAddressID == value) return;
                _ShipToAddressID = value;
                RaiseValidateAndChangedProperty(nameof(ShipToAddressID));
            }
        }

        private int _ShipMethodID;
        public int ShipMethodID {
            get => _ShipMethodID;
            set {
                if (_ShipMethodID == value) return;
                _ShipMethodID = value;
                RaiseValidateAndChangedProperty(nameof(ShipMethodID));
            }
        }

        private Nullable<int> _CreditCardID;
        public Nullable<int> CreditCardID {
            get => _CreditCardID;
            set {
                if (_CreditCardID == value) return;
                _CreditCardID = value;
                RaiseValidateAndChangedProperty(nameof(CreditCardID));
            }
        }

        private string _CreditCardApprovalCode;
        public string CreditCardApprovalCode {
            get => _CreditCardApprovalCode;
            set {
                if (_CreditCardApprovalCode == value) return;
                _CreditCardApprovalCode = value;
                RaiseValidateAndChangedProperty(nameof(CreditCardApprovalCode));
            }
        }

        private Nullable<int> _CurrencyRateID;
        public Nullable<int> CurrencyRateID {
            get => _CurrencyRateID;
            set {
                if (_CurrencyRateID == value) return;
                _CurrencyRateID = value;
                RaiseValidateAndChangedProperty(nameof(CurrencyRateID));
            }
        }

        private decimal _SubTotal;
        public decimal SubTotal {
            get => _SubTotal;
            set {
                if (_SubTotal == value) return;
                _SubTotal = value;
                RaiseValidateAndChangedProperty(nameof(SubTotal));
            }
        }

        private decimal _TaxAmt;
        public decimal TaxAmt {
            get => _TaxAmt;
            set {
                if (_TaxAmt == value) return;
                _TaxAmt = value;
                RaiseValidateAndChangedProperty(nameof(TaxAmt));
            }
        }

        private decimal _Freight;
        public decimal Freight {
            get => _Freight;
            set {
                if (_Freight == value) return;
                _Freight = value;
                RaiseValidateAndChangedProperty(nameof(Freight));
            }
        }

        private decimal _TotalDue;
        public decimal TotalDue {
            get => _TotalDue;
            set {
                if (_TotalDue == value) return;
                _TotalDue = value;
                RaiseValidateAndChangedProperty(nameof(TotalDue));
            }
        }

        private string _Comment;
        public string Comment {
            get => _Comment;
            set {
                if (_Comment == value) return;
                _Comment = value;
                RaiseValidateAndChangedProperty(nameof(Comment));
            }
        }

        private System.Guid _rowguid;
        public System.Guid rowguid {
            get => _rowguid;
            set {
                if (_rowguid == value) return;
                _rowguid = value;
                RaiseValidateAndChangedProperty(nameof(rowguid));
            }
        }

        private System.DateTime _ModifiedDate;
        public System.DateTime ModifiedDate {
            get => _ModifiedDate;
            set {
                if (_ModifiedDate == value) return;
                _ModifiedDate = value;
                RaiseValidateAndChangedProperty(nameof(ModifiedDate));
            }
        }

        private ObservableCollection<Linea> _Lineas;
        public virtual ObservableCollection<Linea> Lineas {
            get => _Lineas;
            set {
                if (_Lineas == value) return;
                _Lineas = value;
                if (value != null)
                    _Lineas.CollectionChanged += (s, ev) => {
                        if (ev.NewItems != null)
                            foreach (Linea item in ev.NewItems) {
                                if (item.Pedido != this)
                                    item.Pedido = this;
                                item.PropertyChanged += Linea_PropertyChanged;
                            }
                        if (ev.OldItems != null)
                            foreach (Linea item in ev.OldItems) {
                                if (item.Pedido == this)
                                    item.PropertyChanged -= Linea_PropertyChanged;
                                item.Pedido = null;
                            }
                        RaisePropertyChanged(nameof(Total));
                    };
                RaiseValidateAndChangedProperty(nameof(Lineas));

            }
        }

        private void Linea_PropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) {
            if (e.PropertyName == "LineTotal")
                RaisePropertyChanged(nameof(Total));
        }

        protected override List<string> ValidateProperty(string propertyName) {
            List<string> lst = new List<string>();
            switch (propertyName) {
                case "": // Validaciones cruzadas
                    break;
            }
            return lst;
        }

        public decimal Total => Lineas?.Sum(l => l.LineTotal) ?? 0;
    }
}
